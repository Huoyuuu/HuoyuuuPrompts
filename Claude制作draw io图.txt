DrawIO 图形规范指南 (完整版) [DrawIO Graphics Specification Guide (Complete Version)]
drawio文件是基于mxGraph的XML结构。 [drawio files are based on mxGraph's XML structure.]
基础要求 [Basic Requirements]
展示在A4纸上，选择合适的字体大小。 [Display on A4 paper, choose appropriate font size.]
字体必须全部加粗，标题等关键元素字号加大处理。 [Font must be entirely bolded; titles and other key elements should have enlarged font sizes.]
线段统一使用3pt宽度，保证在论文打印后依然清晰可见。 [Line segments should uniformly use 3pt width to ensure clarity after printing.]
所有文本格式（加粗、下标上标、公式代码）必须正确实现。 [All text formats (bold, subscript, superscript, formula code) must be correctly implemented.]
使用标准drawio文件格式，保证兼容性。 [Use standard drawio file format to ensure compatibility.]
组件必须完全容纳文字，避免文字溢出。 [Components must fully contain text to prevent text overflow.]
所有线条必须设置jumpStyle=arc和jumpSize=6，确保交叉处清晰可辨。 [All lines must be set with jumpStyle=arc and jumpSize=6 to ensure clear visibility at intersections.]
所有连接线拐点必须设置rounded=1保证美观。 [All connector turning points must be set with rounded=1 for aesthetic appeal.]
布局规范 [Layout Specifications]
组件间垂直和水平间距保持统一 (30-50px为宜)。 [Maintain consistent vertical and horizontal spacing between components (30-50px is appropriate).]
将相关的组件放入容器或组中，以提高图表的可读性和组织性。 [Place related components into containers or groups to improve readability and organization of the diagram.]
对齐方式使用center，保持一致性。 [Alignment method should be 'center' for consistency.]
使用网格对齐 (gridSize=10) 辅助布局。 [Use grid alignment (gridSize=10) to assist layout.]
避免组件和连接线重叠，特别是避免线条穿过文字。 [Avoid overlapping components and connectors, especially lines passing through text.]
连接线规范 [Connector Specifications]
所有箭头样式必须统一 (endArrow=classic)。 [All arrow styles must be consistent (endArrow=classic).]
多条连接线汇入同一组件时，应从不同方向进入 (如左，中，右)。 [When multiple connectors converge into the same component, they should enter from different directions (e.g., left, middle, right).]
同一起点的多条连接线应适当分散起点位置。 [Multiple connectors from the same starting point should have their starting positions appropriately dispersed.]
为所有交叉的连接线添加跳转样式 (jumpStyle=arc)。 [Add jump style (jumpStyle=arc) for all intersecting connectors.]
长距离连接线应适当设置航点 (waypoints) 引导路径。 [Long-distance connectors should have waypoints set appropriately to guide the path.]
绝对禁止连接线遮挡文字和组件标签。 [Absolutely prohibit connectors from obscuring text and component labels.]
组件连接设计 [Component Connection Design]
组件使用浮动连接点，而非固定连接点。 [Components should use floating connection points, not fixed connection points.]
相关组件应放置在合理的相对位置，减少连线复杂度。 [Related components should be placed in reasonable relative positions to reduce connection complexity.]
复杂流程应分层次展示，避免连线交叉过多。 [Complex processes should be displayed in layers to avoid excessive line intersections.]
文本与组件规范 [Text and Component Specifications]
所有组件内文本必须加粗 (fontstyle=1)。 [All text within components must be bold (fontstyle=1).]
数学公式使用HTML格式：h<sup>v</sup>和h<sub>inter</sub>不要使用latex格式。 [Mathematical formulas should use HTML format: h<sup>v</sup> and h<sub>inter</sub>; do not use LaTeX format.]
公式可以根据条件更换字体。 [Formulas can change fonts based on conditions.]
数学符号如点乘必须使用正确格式：⊙ 应写为⊙。 [Mathematical symbols like dot product must use the correct format: ⊙ should be written as ⊙.]
合理使用waypoints：在需要精确控制连接路径时，可以使用固定的waypoints来避免线条交叉和文字遮挡。 [Use waypoints reasonably: when precise control of connection paths is needed, fixed waypoints can be used to avoid line intersections and text obstruction.]
组件大小应根据内容自适应，保持适当留白。 [Component size should adapt to content, maintaining appropriate whitespace.]
命名与结构规范 [Naming and Structure Specifications]
diagram name必须命名为有意义的名称 (如"多模态特征融合流程")。 [Diagram name must be meaningful (e.g., "Multimodal Feature Fusion Process").]
组件ID必须反映其功能 (如query-network)。 [Component ID must reflect its function (e.g., query-network).]
连接线ID应反映实际连接关系 (如edge-visual-query)。 [Connector ID should reflect the actual connection relationship (e.g., edge-visual-query).]
相关元素应放在一起，提高代码可读性。 [Related elements should be grouped together to improve code readability.]
实践检查清单 [Practical Checklist]
连接线交叉检查：所有交叉处是否设置了jumpStyle=arc。 [Connector intersection check: Is jumpStyle=arc set at all intersections?]
文本遮挡检查：是否有连接线穿过文本或遮挡组件。 [Text obstruction check: Are there connectors passing through text or obstructing components?]
格式一致性检：字体、线条宽度、箭头样式是否统一。 [Format consistency check: Are font, line width, and arrow style consistent?]
连接美观性检查：连接线是否从合适的方向进入组件。 [Connection aesthetics check: Do connectors enter components from appropriate directions?]
留白空间检查：组件之间是否有足够间距 (30-50px)。 [Whitespace check: Is there enough spacing between components (30-50px)?]
代码健壮性检查：代码是否符合drawio开发规范，是否可以运行。 [Code robustness check: Does the code comply with drawio development specifications and is it runnable?]
特殊场景处理 [Special Scenario Handling]
复杂图表应分层或分区域展示。 [Complex diagrams should be displayed in layers or regions.]
多条平行连接线应保持一致的间距和样式。 [Multiple parallel connectors should maintain consistent spacing and style.]
长路径连接使用中间节点或分段处理。 [Long-path connections should use intermediate nodes or segment processing.]
双向连接使用两条独立的连接线而非双向箭头。 [Bi-directional connections should use two independent connectors instead of double-headed arrows.]
参考资源 [Reference Resources]
DrawIO官方文档：https://www.drawio.com/
DrawIO学习教程：https://www.drawzh.com
在线编辑器：https://app.diagrams.net/
MXGraph语法：https://jgraph.github.io/mxgraph/docs/tutorial.html


根据我提供的内容，为其绘制各种色彩丰富的结构图、流程图等等以可视化展示给定内容的关键部分
